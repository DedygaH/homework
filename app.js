
//task 1
// Написати функцію compact() яка має приймати на вхід 
// масив, а на вихід має повертати значення нового масиву без повторень.
// приклад:
// const arr = [5, 3, 4, 5,6,7,3];
// const arr2 = compact(arr);
// console.log(arr2); // [5,3,4,6,7]

const arr = [5, 3, 4, 5,6,7,3];             //масив
const arr2 = compact(arr);                  //змінній arr2 присвоїли результат виконання функції
function compact(arr) {                     // оголосили функцію
  const arr2 = [];                          //створили порожній масив  
  for (let i = 0; i < arr.length; i++) {    //перебераем кожен элемент
    if (!arr2.includes(arr[i])) {           //якщо елемент ще не міститься 
                                            // в arr2 за допомогою методу includes
      arr2.push(arr[i]);                    //додаємо його до масиву arr2
    }
  }  
  return arr2;                              //повертається
}
console.log(arr2);


//task 2
// Написати функцію createArray(start, end),
// яка приймає на вхід 2 параметри:
// початкове значення, кінцеве значення
// а на виході отримує масив із діапазоном цих значень
// (реалізувати достатньо лише із числовими значеннями)

// let arr = createArray(2, 9);
// console.log(arr); // [2,3,4,5,6,7,8,9]

let arr = createArray(2, 9);                    //змінній arr присвоїли масив з 2,9
function createArray(start, end) {              //оголосили функцію, яка створює масив чисел 
                                                //з вказаного початкового значення start 
                                                //до кінцевого значення end.
  const arr = [];                               //створюєм порожній масив arr
  for (let i = start; i <= end; i++) {          //ітерація по числам від start до end.
    arr.push(i);                                //додаємо i до масиву arr
  }
  return arr;                                   //повертає масив arr
}
console.log(arr);


//task 3
// Задані цілі числа a і b(a < b).
// Виведіть усі цілі числа від a до b включно, при цьому a
// виводится 1 раз, число а + 1 - два рази і т.д.

let a = 1;
let b = 10;
if (a < b) {                                      // Перевірте, чи a менше b.
for (let i = a; i <= b; i++) {                    // Цикл проходить по числам від a до b включно.
for (let j = 0; j < i; j++) {                     // Виведіть число i стільки разів, скільки воно дорівнює i.
  console.log(i);
}
}
} else {
console.log("a не менше b");
}

// ======================================================

let a = 2;                                   // Объявление переменной a и присвоение ей значения 2
let b = 9;                                   // Объявление переменной b и присвоение ей значения 9
let output = '';                             // Объявление переменной output и присвоение ей пустой строки
for (let i = a; i <= b; i++) {               // Использование цикла for для итерации по числам от a до b
  for (let j = 0; j < i - a + 1; j++) {      // Вложенный цикл for для повторения каждого числа i столько раз, сколько разница между 
                                             // текущим числом i и начальным числом a плюс 1
    output += i + ' ';                       // Добавление текущего числа i и пробела к переменной output
  }
}
console.log(output);                         // Вывод значения переменной output в консоль

// ============================================================


//task 4
// Напишіть функцію randArray(k), яка заповнюватиме масив k
// випадковими цілими числами.Випадкові числа генеруються із діапазону 1 - 500.
// randArray(5);  // [399,310,232,379,40]

function randArray(k) {
  const array = [];                                                // Створюємо пустий масив для збереження випадкових чисел
  for (let i = 0; i < k; i++) {                                    // Перебираємо k елементів масиву
    const randomNumber = Math.floor(Math.random() * 500) + 1;      // Генеруємо випадкове число в діапазоні від 1 до 500
    array.push(randomNumber);                                      // Додаємо випадкове число до масиву
  }
  return array;                                                    // Повертаємо згенерований масив
}
const result = randArray(5);                                       // Генеруємо масив з 5 випадкових чисел
console.log(result);


//task 5
// Є масив [5, “Limit”, 12, “a”, “3”, 99, 2, [2, 4, 3, “33”, “a”, “text”], “strong”, “broun”]
// Написати функцію яка виведе нові масиви які складаються із даних початкового масиву, але одного типу даних 
// (не приводити тип стрінг в число навіть якщо там лише число)

function funcName(arr) {
  const arrayNumbers = [];                                // Масив для числових елементів
  const arrayStrings = [];                                // Масив для рядкових елементів
  for (let i = 0; i < arr.length; i++) {                  // Перебираємо кожен елемент початкового масиву
    if (typeof arr[i] === 'number') {                     // Перевіряємо, чи елемент є числом
      arrayNumbers.push(arr[i]);                          // Якщо так, додаємо його до масиву числових елементів
    } else if (typeof arr[i] === 'string') {              // Перевіряємо, чи елемент є рядком
      arrayStrings.push(arr[i]);                          // Якщо так, додаємо його до масиву рядкових елементів
    }
  }
  const newArray = [arrayNumbers, arrayStrings];          // Створюємо новий масив, який містить обидва масиви (числовий та рядковий)
  return newArray;                                        // Повертаємо новий масив
}
const arr = [5, "Limit", 12, "a", "3", 99, 2, [2, 4, 3, "33", "a", "text"], "strong", "broun"];
const arrNew = funcName(arr);                             // Викликаємо функцію для обробки початкового масиву
console.log(arrNew);


//task 6
// Напишіть функцію calc(a, b, op), яка виконує над числами a і b одну із арифметичних операцій та повертає її результат. 
// Вид операції визначається цілим числом op: 1 – віднімання, 2 – добуток, 3 – ділення, інші значення – додавання.

function calc(a, b, op) {
  let result;                                                     // Змінна для збереження результату операції
  if (op === 1) {                                                 // Перевіряємо, чи op має значення 1
    result = a - b;                                               // Якщо так, віднімаємо b від a
  } else if (op === 2) {                                          // Перевіряємо, чи op має значення 2
    result = a * b;                                               // Якщо так, перемножаємо a і b
  } else if (op === 3) {                                          // Перевіряємо, чи op має значення 3
    result = a / b;                                               // Якщо так, ділимо a на b
  } else {                                                        // Якщо op має інше значення
    result = a + b;                                               // Додаємо a до b
  }
  return result;                                                  // Повертаємо результат операції
}
const a = 5;
const b = 3;
const op = 2;
const operationResult = calc(a, b, op);                           // Викликаємо функцію calc з аргументами a, b і op
console.log(operationResult);

//task 7
// Напишіть функцію findUnique(arr), яка приймає масив arr і перевіряє на унікальність його елементи. 
// Якщо всі елементи масиву унікальні (не мають дублів), то функція поверне true, інакше - false.
// findUnique([1, 2, 3, 5, 3]);  // => false
// findUnique([1, 2, 3, 5, 11]); // => true

function findUnique(arr) {
  for (let i = 0; i < arr.length; i++) {                    // Перебираємо кожен елемент масиву
    if (arr.indexOf(arr[i]) !== arr.lastIndexOf(arr[i])) {  // Порівнюємо перший і останній індекс елемента
        return false;                                       // Якщо індекси не співпадають, елемент 
                                                            //не є унікальним, повертаємо false
    }
  }
  return true;                                              // Якщо всі елементи є унікальними, повертаємо true
}
console.log(findUnique([1, 2, 3, 5, 3]));                   // Виводиться false, оскільки 3 повторюється
console.log(findUnique([1, 2, 3, 5, 11]));                  // Виводиться true, всі елементи є унікальними

//task 8
// (Ускладнене. Задача не оцінюється. Для тих, кому хочеться поробити ще щось)
// Створити функцію create() , яка приймає один аргумент у вигляді рядка. Ця функція повертає анонімну функцію, 
// яка перевіряє чи переданий в неї аргумент збігається з аргументом зовнішньої функції.
// const tom = create("pass_for_Tom");
// tom("pass_for_Tom"); //повертає true 
// tom("pass_for_tom"); //повертає false

function create(secret) {
  return function(input) {                      // Повертаємо анонімну функцію
    return input === secret;                    // Перевіряємо збіг аргументів
  };
}
const tom = create("pass_for_Tom");
console.log(tom("pass_for_Tom"));               // Виводиться true, оскільки переданий аргумент 
                                                // збігається зі змінною "secret"(pass_for_Tom)
console.log(tom("pass_for_tom"));               // Виводиться false, оскільки переданий аргумент 
                                                // не збігається зі змінною "secret"(pass_for_Tom)



